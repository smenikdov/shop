import type { Metadata } from 'next';

import Container from '@/components/grid/Container';
import Col from '@/components/grid/Col';
import Text from '@/components/typography/Text';
import Paragraph from '@/components/typography/Paragraph';
import Title from '@/components/typography/Title';
import Link from '@/components/typography/Link';
import Icon from '@/components/Icon';
import Empty from '@/components/Empty';
import Result from '@/components/Result';
import Button from '@/components/Button';
import Tooltip from '@/components/floating/Tooltip';
import Input from '@/components/form/Input';
import ModalDialog from '@/components/modal/ModalDialog';
import Table from '@/components/Table';
import Flex from '@/components/Flex';
import Card from '@/components/Card';
import Breadcrumbs from '@/components/Breadcrumbs';
import Property from '@/components/Property';

import AuthSessionsList from '@/features/auth/components/AuthSessionsList';

import { USER_ROLE_LABEL, USER_SEX_LABEL } from '@/constants';
import { formatPhoneNumber } from '@/utils/text';

import type { PageProps, SearchParams } from '@/typings';

import { userGetDetails } from '@/features/user/routes';
import { authGetUserSessions } from '@/features/auth/routes';

export const metadata: Metadata = {
    title: 'Админпанель | Детализация пользователя',
    description: 'Generated by create next app',
};

export default async function UserDetails(props: PageProps<{ id: string }>) {
    const userId = Number(props.params.id);
    const responses = await Promise.all([
        userGetDetails({ userId }),
        authGetUserSessions({ userId }),
    ]);
    if (!responses[0].isSuccess || !responses[1].isSuccess) {
        throw new Error('Ошибка при загрузке страницы');
    }
    const userDetails = responses[0].data;
    const sessions = responses[1].data;

    return (
        <main>
            <Container className="my-lg">
                <Breadcrumbs
                    pageNames={{ [`${props.params.id}`]: 'Детализация пользователя' }}
                    className="mb-lg"
                />

                <Title level={2} className="mb-lg">
                    Детализация пользователя
                </Title>
                <Card className="mb-lg">
                    <Flex direction="column">
                        <Property name="Фамилия" value={userDetails.lastName} />
                        <Property name="Имя" value={userDetails.firstName} />
                        <Property name="Отчество" value={userDetails.patronymic} />
                        <Property
                            name="Почта"
                            value={
                                userDetails.email ? (
                                    <a href={`mailto:+${userDetails.email}`}>{userDetails.email}</a>
                                ) : (
                                    '—'
                                )
                            }
                        />
                        <Property
                            name="Телефон"
                            value={
                                userDetails.phone ? (
                                    <a href={`tel:+${userDetails.phone}`}>
                                        {formatPhoneNumber(userDetails.phone)}
                                    </a>
                                ) : (
                                    '—'
                                )
                            }
                        />
                        <Property name="Роль" value={USER_ROLE_LABEL[userDetails.role]} />
                        <Property
                            name="Пол"
                            value={userDetails.sex ? USER_SEX_LABEL[userDetails.sex] : '—'}
                        />
                    </Flex>
                </Card>

                <Title level={2} className="mb-lg">
                    Активные сеансы ({sessions.length})
                </Title>
                <AuthSessionsList sessions={sessions} />
            </Container>
        </main>
    );
}
